/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/leagues": {
    /** @description Get list of Leagues */
    get: {
      /** @description Get list of Leagues */
      parameters?: {
          /** @description Get list of Leagues by name */
        query?: {
          name?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": (components["schemas"]["Leagues"])[];
          };
        };
      };
    };
  };
  "/teams": {
    /** @description Get list of Teams */
    get: {
      /** @description Get list of Teams */
      parameters?: {
          /** @description Get list of Teams by name */
        query?: {
          name?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": (components["schemas"]["Teams"])[];
          };
        };
      };
    };
  };
  "/standings": {
    /** @description Get list of standings */
    get: {
      /** @description Get list of standings */
      parameters?: {
          /** @description Get list of standings by season and team id  or league id */
        query?: {
          id?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": (components["schemas"]["Standings"])[];
          };
        };
      };
    };
  };
  "/fixtures": {
    /** @description Get list of standings */
    get: {
      /** @description Get list of standings */
      parameters: {
          /** @description Get list of Fixtures by season and team id */
          /** @description Get list of Fixtures by season and team id */
        query: {
          id: number;
          season: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": (components["schemas"]["Fixtures"])[];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Leagues: {
      league?: components["schemas"]["League"];
      country?: components["schemas"]["Country"];
      seasons?: (components["schemas"]["Season"])[];
    };
    League: {
      id?: string;
      name: string;
      logo?: string;
      flag?: string;
      country?: string;
      type?: string;
    };
    Country: {
      name: string;
      code?: string;
      flag?: string;
    };
    Season: {
      year?: string;
      start?: string;
      end?: string;
      coverage?: components["schemas"]["Coverage"];
    };
    SeasonFixture: {
      events?: boolean;
      lineups?: boolean;
      statistics_fixtures?: boolean;
      statistics_players?: boolean;
    };
    Coverage: {
      standings?: boolean;
      players?: boolean;
      top_scorers?: boolean;
      top_assists?: boolean;
      top_cards?: boolean;
      injuries?: boolean;
      predictions?: boolean;
      odds?: boolean;
      fixtures?: (components["schemas"]["SeasonFixture"])[];
    };
    Teams: {
      team?: components["schemas"]["Team"];
      venue?: components["schemas"]["Venue"];
    };
    Team: {
      id?: number;
      name?: string;
      country?: string;
      founded?: number;
      national?: boolean;
      logo?: string;
      winner?: boolean;
    };
    Venue: {
      id?: number;
      name?: string;
      address?: string;
      city?: number;
      capacity?: number;
      surface?: string;
      image?: string;
    };
    Periods: {
      first?: number;
      second?: number;
    };
    Fixture: {
      id?: number;
      referee?: string;
      timezone?: string;
      date?: string;
      timestamp?: number;
      periods?: components["schemas"]["Periods"];
      venue?: components["schemas"]["Venue"];
      status?: {
        long?: string;
        short?: string;
        elapsed?: number;
      };
    };
    FixtureTeams: {
      home?: components["schemas"]["Team"];
      away?: components["schemas"]["Team"];
    };
    FixtureGoals: {
      home?: number;
      away?: number;
    };
    FixtureScores: {
      halftime?: components["schemas"]["FixtureGoals"];
      fulltime?: components["schemas"]["FixtureGoals"];
      extratime?: components["schemas"]["FixtureGoals"];
      penalty?: components["schemas"]["FixtureGoals"];
    };
    FixtureLeague: components["schemas"]["League"] & {
      season?: string;
      round?: string;
    };
    Fixtures: {
      fixture?: components["schemas"]["Fixture"];
      league?: components["schemas"]["FixtureLeague"];
      teams?: components["schemas"]["FixtureTeams"];
      goals?: components["schemas"]["FixtureGoals"];
      scores?: components["schemas"]["FixtureScores"];
    };
    StandingGoals: {
      for?: number;
      againts?: number;
    };
    StandingGame: {
      played?: number;
      win?: number;
      draw?: number;
      lose?: number;
      goals?: components["schemas"]["StandingGoals"];
    };
    StandingTeam: {
      rank?: number;
      team?: components["schemas"]["Team"];
      points?: number;
      goalsDiff?: number;
      group?: string;
      form?: string;
      status?: string;
      description?: string;
      all?: components["schemas"]["StandingGame"];
      home?: components["schemas"]["StandingGame"];
      away?: components["schemas"]["StandingGame"];
    };
    StandingArray: (components["schemas"]["StandingTeam"])[];
    StandingLeague: components["schemas"]["League"] & {
      season?: string;
      standings: (components["schemas"]["StandingArray"])[];
    };
    Standings: {
      league?: components["schemas"]["StandingLeague"];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export type operations = Record<string, never>;
